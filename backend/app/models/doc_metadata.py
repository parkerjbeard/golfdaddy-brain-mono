from datetime import datetime
from typing import Optional
from uuid import UUID

from pydantic import BaseModel, Field


class DocMetadata(BaseModel):
    id: Optional[UUID] = Field(None, description="Record ID generated by the DB")
    doc_git_url: str = Field(..., description="URL to the document in Git")
    doc_file_path: str = Field(..., description="Path of the document within the repository")
    title: Optional[str] = Field(None, description="Human readable title of the document")
    associated_task_id: Optional[UUID] = Field(None, description="Task this document relates to")
    last_known_commit_hash: Optional[str] = Field(None, description="Last commit hash when recorded")
    created_at: Optional[datetime] = None
    updated_at: Optional[datetime] = None

    class Config:
        from_attributes = True
