from pydantic import BaseModel, Field
from typing import Optional
from uuid import UUID
from datetime import datetime
from decimal import Decimal

class Commit(BaseModel):
    id: Optional[UUID] = Field(None, description="Commit record ID, generated by DB if None")
    commit_hash: str = Field(..., unique=True)
    author_id: Optional[UUID] = Field(None, description="ID of the user (from users table) who authored the commit")
    ai_points: Optional[int] = None
    ai_estimated_hours: Optional[Decimal] = Field(None, max_digits=5, decimal_places=2)
    seniority_score: Optional[int] = Field(None, description="Developer Work Seniority Score (1-10)")
    commit_timestamp: datetime
    created_at: Optional[datetime] = Field(None, description="Timestamp when the record was added to this DB")

    class Config:
        from_attributes = True