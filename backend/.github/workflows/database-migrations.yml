name: Database Migrations

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run migrations'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      migration_type:
        description: 'Type of migration'
        required: true
        default: 'migrate'
        type: choice
        options:
          - migrate
          - rollback
          - status

jobs:
  run-migrations:
    name: Run Database Migrations
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install alembic psycopg2-binary sqlalchemy

      - name: Run migrations
        working-directory: backend
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          case "${{ github.event.inputs.migration_type }}" in
            migrate)
              echo "Running migrations..."
              # alembic upgrade head
              # Or use custom migration script
              python scripts/run_migrations.py
              ;;
            rollback)
              echo "Rolling back last migration..."
              # alembic downgrade -1
              ;;
            status)
              echo "Checking migration status..."
              # alembic current
              ;;
          esac

      - name: Notify on success
        if: success()
        run: |
          echo "Migration completed successfully!"
          # Add Slack/Discord notification here

      - name: Notify on failure
        if: failure()
        run: |
          echo "Migration failed!"
          # Add Slack/Discord notification here